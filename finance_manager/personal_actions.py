from aiogram import types
import statistic
from dispatcher import dp
import re
from bot import BotDB
import datetime
from handlers.courses import *


def data_format(data):
    data_time = datetime.datetime.strptime(
        data, "%Y-%m-%d %H:%M:%S"
    )  # transform into class datatime
    data_formated = datetime.datetime.strftime(
        data_time, "%d-%m-%Y %H:%M"
    )  # transform into formated data <str>
    return data_formated


@dp.message_handler(commands="start")  # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
async def start(message: types.Message):
    if not BotDB.user_exists(
        message.from_user.id
    ):  # –ü—Ä–æ–≤–µ—Ä—è–º –Ω–∞–ª–∏—á–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
        BotDB.add_user(message.from_user.id)

    await message.bot.send_message(
        message.from_user.id,
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –Ø —Ç–≤–æ–π –ª–∏—á–Ω—ã–π –±—É—Ö–≥–∞–ª—Ç–µ—Ä üòä. –Ø –±—É–¥—É –∑–∞–ø–æ–º–∏–Ω–∞—Ç—å –≤—Å–µ —Ç–≤–æ–∏ "
        "—Ä–∞—Å—Ö–æ–¥—ã –∏ –¥–æ—Ö–æ–¥—ã.",
    )


# –í—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏ –∫–æ–º–∞–Ω–¥–µ /help
@dp.message_handler(commands="help")  # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
async def start(message: types.Message):
    if not BotDB.user_exists(message.from_user.id):
        BotDB.add_user(message.from_user.id)
    await message.bot.send_message(
        message.from_user.id,
        f"–ú–æ–∏ –∫–æ–º–∞–Ω–¥—ã:\n /spent, /s, !spent, !s - –∑–∞–ø–æ–º–∏–Ω–∞—é—Ç —Ä–∞—Å—Ö–æ–¥\n /earned, /e, !earned, "
        f"!e - –∑–∞–ø–æ–º–∏–Ω–∞—é—Ç –¥–æ—Ö–æ–¥ \n /history, /h, !history, !h - –≤—ã–¥–∞—é—Ç –æ—Ç—á–µ—Ç —Ä–∞—Å—Ö–æ–¥–æ–≤"
        f" \n !h –º–µ—Å—è—Ü - –∑–∞ –º–µ—Å—è—Ü\n !h –≥–æ–¥ - –∑–∞ –≥–æ–¥",
    )


@dp.message_handler(
    commands=("spent", "earned", "s", "e"), commands_prefix="/!"
)  # –õ–æ–≤–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º "/!" –∏ –æ–ø–µ—Ä–∞—Ü–∏–µ–π –¥–æ—Ö–æ–¥/—Ä–∞—Å—Ö–æ–¥
async def start(message: types.Message):
    cmd_variants = (
        ("/spent", "/s", "!spent", "!s"),
        ("/earned", "/e", "!earned", "!e"),
    )
    operation = (
        "-" if message.text.startswith(cmd_variants[0]) else "+"
    )  # –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–æ—Ö–æ–¥ –∏–ª–∏ —Ä–∞—Å—Ö–æ–¥
    value = message.text
    info, group = "", ""
    for i in cmd_variants:  # –£–∑–Ω–∞–µ–º —Ç–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏
        for j in i:
            value = value.replace(j, "").strip()
    inf = value
    # —Ü–∏–∫–ª –≤—ã–¥–µ–ª–µ–Ω–∏–µ –≤—Å–µ–π —Ç–µ–∫—Å—Ç–æ–≤–æ–π —á–∞—Å—Ç–∏ –ø–æ—Å–ª–µ –≤–≤–æ–¥–∞ —Å—É–º–º—ã
    for i in range(len(inf)):
        if inf[i] in " ":
            info = inf[i + 1 :]

            break

    if len(value):
        x = re.findall(
            r"\d+(?:.\d+)?", value
        )  # –≤—ã–¥–µ–ª—è–µ–º —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ –≤—Å–µ–≥–æ —Ç–µ–∫—Å—Ç–∞
        if len(x):
            value = float(x[0].replace(",", "."))
            BotDB.add_record_1(
                message.from_user.id, operation, value, info, group
            )

            if operation == "-":
                await message.reply(
                    "‚úî –ó–∞–ø–∏—Å—å –æ <u><b>—Ä–∞—Å—Ö–æ–¥–µ</b></u> —É—Å–ø–µ—à–Ω–æ –≤–Ω–µ—Å–µ–Ω–∞!",
                    reply=False,
                )
            else:
                await message.reply(
                    "‚úî –ó–∞–ø–∏—Å—å –æ <u><b>–¥–æ—Ö–æ–¥–µ</b></u> —É—Å–ø–µ—à–Ω–æ –≤–Ω–µ—Å–µ–Ω–∞!",
                    reply=False,
                )
        else:
            await message.reply("–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å—É–º–º—É!", reply=False)
    else:
        await message.reply("–ù–µ –≤–≤–µ–¥–µ–Ω–∞ —Å—É–º–º–∞!", reply=False)


@dp.message_handler(
    commands=("history", "h"), commands_prefix="/!"
)  # –õ–æ–≤–∏–º –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤—ã–¥–∞—á–∏ –æ—Ç—á–µ—Ç–∞ –æ —Ä–∞—Å—Ö–æ–¥–∞—Ö –∑–∞ –¥–µ–Ω—å/–º–µ—Å—è—Ü/–≥–æ–¥
async def start(message: types.Message):
    cmd_variants = ("/history", "/h", "!history", "!h")
    within_als = {
        "day": ("today", "day", "—Å–µ–≥–æ–¥–Ω—è", "–¥–µ–Ω—å"),
        "month": ("month", "–º–µ—Å—è—Ü"),
        "year": ("year", "–≥–æ–¥"),
    }

    cmd = message.text
    for r in cmd_variants:
        cmd = cmd.replace(r, "").strip()

    within = "day"  # –∑–Ω–∞—á–µ–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    if len(cmd):
        for k in within_als:
            for als in within_als[k]:
                if als == cmd:
                    within = k

    records = BotDB.get_records(message.from_user.id, within)

    if len(records):
        answer = f"üïò –ò—Å—Ç–æ—Ä–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π –∑–∞ {within_als[within][-1]}\n\n"

        for r in records:
            answer += (
                "<b>" + ("‚ûñ –†–∞—Å—Ö–æ–¥" if not r[2] else "‚ûï –î–æ—Ö–æ–¥") + "</b>"
            )  # —Ä–∞—Å—Ö–æ–¥ –∏–ª–∏ –¥–æ—Ö–æ–¥
            answer += f" - {r[3]}"  # C—É–º–º–∞
            answer += f" <i>({data_format(r[4])})</i>"  # –î–∞—Ç–∞
            answer += f" {r[5]}\n"  # –ò–Ω—Ñ–æ
        await message.reply(answer, reply=False)
    else:
        await message.reply("–ó–∞–ø–∏—Å–µ–π –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ!", reply=False)


# @dp.message_handler(commands=("statistic", "—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"),
#                     commands_prefix="/!"
#                     )
# async def handler_statistic(message: types.Message):
#     answer = statistic.get_statistic(message.text, message.from_user.id)
#     await message.reply(answer, reply=False)


@dp.message_handler(commands=("courses", "–∫—É—Ä—Å—ã", "c"), commands_prefix="/!")
async def start(message: types.Message):
    cmd_variants = ("/n", "!n")
    within_als = {
        "parse_bsb": ("bsb", "–±—Å–±"),
        "parse_alfa": ("alfa", "–∞–ª—å—Ñ–∞"),
        "parse_belweb": ("belweb", "–±–µ–ª–≤—ç–±"),
        "parse_prior": ("prior", "–ø—Ä–∏–æ—Ä"),
    }
    cmd = message.text
    for r in cmd_variants:
        cmd = cmd.replace(r, "").strip()  # —É–¥–∞–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –∏–∑ —Ç–µ–∫—Å—Ç–∞
    within = "parse_all"
    if len(cmd):
        for k in within_als:
            for als in within_als[k]:
                if als == cmd:
                    within = k
    result = eval(within)()
    await message.reply(result, reply=False)


#     operation = '-' if message.text.startswith(cmd_variants[0]) else '+' #–∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–æ—Ö–æ–¥ –∏–ª–∏ —Ä–∞—Å—Ö–æ–¥
#     value = message.text
#     info = ''
#
#     for i in cmd_variants:            #–£–∑–Ω–∞–µ–º —Ç–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏
#         for j in i:
#             value = value.replace(j, '').strip() #–æ—Ç–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É —Ä–∞—Å—Ö–æ–¥–∞/–¥–æ—Ö–æ–¥–∞
#     inf = value
#     # —Ü–∏–∫–ª –≤—ã–¥–µ–ª–µ–Ω–∏–µ –≤—Å–µ–π —Ç–µ–∫—Å—Ç–æ–≤–æ–π —á–∞—Å—Ç–∏ –ø–æ—Å–ª–µ –≤–≤–æ–¥–∞ —Å—É–º–º—ã
#     for i in range(len(inf)):
#         if inf[i] in ' ':
#             info = inf[i+1:]
#             break
#
#
#     if(len(value)):
#         x = re.findall(r"\d+(?:.\d+)?", value) #–≤—ã–¥–µ–ª—è–µ–º —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ –≤—Å–µ–≥–æ —Ç–µ–∫—Å—Ç–∞
#
#         if(len(x)):
#             value = float(x[0].replace(',', '.'))  #–≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π value –∑–∞–ø–∏—Å–∞–Ω–∞ —Ç–æ–ª—å–∫–æ —Å—É–º–º–∞
#
#             BotDB.add_record_1(message.from_user.id, operation, value, info)
#
#             if(operation == '-'):
#                 await message.reply("‚úî –ó–∞–ø–∏—Å—å –æ <u><b>—Ä–∞—Å—Ö–æ–¥–µ</b></u> —É—Å–ø–µ—à–Ω–æ –≤–Ω–µ—Å–µ–Ω–∞!")
#             else:
#                 await message.reply("‚úî –ó–∞–ø–∏—Å—å –æ <u><b>–¥–æ—Ö–æ–¥–µ</b></u> —É—Å–ø–µ—à–Ω–æ –≤–Ω–µ—Å–µ–Ω–∞!")
#         else:
#             await message.reply("–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å—É–º–º—É!")
#     else:
#         await message.reply("–ù–µ –≤–≤–µ–¥–µ–Ω–∞ —Å—É–º–º–∞!")
